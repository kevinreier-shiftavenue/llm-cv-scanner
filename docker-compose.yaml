version: '3.1'

services:
    flowise:
      image: flowiseai/flowise
      restart: always
      env_file:
        - ./envs/flowise.env
      ports:
          - '3000:3000'
      volumes:
          - ~/.flowise:/root/.flowise
      command: /bin/sh -c "sleep 3; flowise start"
    # flowise_init:
    #   image: alpine/curl
    #   depends_on:
    #     - flowise
    #   volumes:
    #       - ./configs/flowise/:/flowise_init/
    #   command: |
    #     curl -v http://flowise:3000/api/v1/chatflows -X POST --data @/flowise_init/pdf_eval_chatflow.json -H "Content-Type: application/json" && sleep 1000
    
    # backend:
    #   container_name: llm-cv-scanner-backend
    #   image: llm-cv-scanner-backend
    #   restart: always
    #   env_file:
    #     - ./envs/backend.docker.env
    #   environment:
    #     - PORT=5000
    #   build:
    #       context: backend
    #       dockerfile: dockerfile
    #   ports:
    #       - '5050:5000'
    frontend:
      image: llm-cv-scanner-dashboard
      container_name: llm-cv-scanner-dashboard
      restart: always
      build:
        context: frontend/llm-cv-scanner-dashboard
        dockerfile: dockerfile
      ports:
        - '8080:8080'
      command: npm start
    wiremock:
      image: rodolpheche/wiremock
      container_name: wiremock-container
      ports:
        - "6060:8080"
      volumes:
        - ./wiremock/mappings:/home/wiremock/mappings
        - ./wiremock/__files:/home/wiremock/__files
